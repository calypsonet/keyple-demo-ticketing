name: Reusable .NET Release

on:
  workflow_call:
    inputs:
      component-name:
        description: 'Name of the component being built'
        required: true
        type: string
      working-directory:
        description: 'Working directory for the build'
        required: true
        type: string
      archive-name-prefix:
        description: 'Prefix for the archive name'
        required: true
        type: string

jobs:
  release-dotnet:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code from ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup .NET 7.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Set version in .csproj to ${{ github.ref_name }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          version="${{ github.ref_name }}"
          csproj_file=$(find . -maxdepth 1 -name "*.csproj" | head -n 1)
          echo "Updating $csproj_file to version $version"
          sed -i -E "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>$version</AssemblyVersion>|" "$csproj_file"
          sed -i -E "s|<FileVersion>.*</FileVersion>|<FileVersion>$version</FileVersion>|" "$csproj_file"
          sed -i -E "s|<Version>.*</Version>|<Version>$version</Version>|" "$csproj_file"

      - name: Check code format, test and build release ${{ inputs.component-name }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          dotnet restore
          dotnet format --verify-no-changes App.sln
          dotnet test --no-build --verbosity normal
          dotnet publish -c Release -r win-x64 --no-restore -o ./publish

      - name: Archive ${{ inputs.component-name }} application
        working-directory: ${{ inputs.working-directory }}/publish
        run: |
          zip -j -r "../${{ inputs.archive-name-prefix }}-${{ github.ref_name }}.zip" ./*

      - name: Upload ${{ inputs.component-name }} artifacts to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ inputs.working-directory }}/${{ inputs.archive-name-prefix }}-${{ github.ref_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
